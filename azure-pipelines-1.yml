# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

name: Dockerbuild-AKSdeploy



variables:
  - name: repository
    value: 'app'
  - name: dockerfile
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: containerRegistry
    value: 'acr'

stages :
  - stage: Build
    displayName: Build and push to ACR
    jobs:  
    - job: Build
      displayName: Build job
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          containerRegistry: ${{ variables.containerRegistry }}
          command: buildAndPush
          repository: ${{ variables.repository }}
          Dockerfile: ${{ variables.dockerfile }}
          tags: v1
      
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: '**'
          TargetFolder: '$(Pipeline.Workspace)/1/manifests/'
      
  - stage: Deploy
    displayName: Deploy AKS manifest
    jobs:  
    - job: Build
      displayName: AKS Deployment manifest
      steps:
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'aks'
          manifests: '$(Pipeline.Workspace)/manifests/deployment.yml'

  - stage: Loadbalancerservice
    displayName: Service Creation
    jobs:
    - job: Build
      displayName: Service Creation
      steps:
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'aks'
          manifests: '$(Pipeline.Workspace)/manifests/service.yml'
